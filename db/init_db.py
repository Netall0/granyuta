from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from models import Base, Bathhouse
import os
import json

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –±–∞–Ω—å"""
    
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    DB_PATH = os.path.join(os.path.dirname(__file__), 'baths.db')
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    engine = create_engine(f'sqlite:///{DB_PATH}', echo=False)
    Session = sessionmaker(bind=engine)
    session = Session()
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        Base.metadata.create_all(engine)
        print('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã/–ø—Ä–æ–≤–µ—Ä–µ–Ω—ã')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        existing_count = session.query(Bathhouse).count()
        if existing_count > 0:
            print(f'üìä –ë–∞–∑–∞ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç {existing_count} –∑–∞–ø–∏—Å–µ–π')
            return
        
        # –ü—Ä–∏–º–µ—Ä—ã –±–∞–Ω—å
        baths = [
            Bathhouse(
                name='–ë–µ—Å–µ–¥–∫–∞ –ö–≤–∞–¥—Ä–æ',
                description='–£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞. –ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –ø–ª–æ—â–∞–¥—å. –ù–∞–¥–µ–∂–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è. –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞. –£—é—Ç –∏ –∫–æ–º—Ñ–æ—Ä—Ç –¥–ª—è —Å–µ–º—å–∏.',
                price=125000,
                image='image/besedkakvadro.webp',
                tags='–±–µ—Å–µ–¥–∫–∞,–∫–≤–∞–¥—Ä–æ',
                specs=json.dumps(['–ö–≤–∞–¥—Ä–æ —Ñ–æ—Ä–º–∞', '–ö–µ–¥—Ä —Å–∏–±–∏—Ä—Å–∫–∏–π', '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞']),
                features=json.dumps(['–£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞', '–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –ø–ª–æ—â–∞–¥—å', '–ù–∞–¥–µ–∂–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', '–ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞', '–£—é—Ç –∏ –∫–æ–º—Ñ–æ—Ä—Ç –¥–ª—è —Å–µ–º—å–∏'])
            ),
            Bathhouse(
                name='–ë–∞–Ω—è –ö–≤–∞–¥—Ä–æ –≤ –Ω–∞–ª–∏—á–∏–∏',
                description='–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω. –ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –ø–∞—Ä–∏–ª–∫–∞. –û—Ç–¥–µ–ª—å–Ω–∞—è –º–æ–µ—á–Ω–∞—è. –ì–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ. –¢–µ–ø–ª–æ –∏ –∑–¥–æ—Ä–æ–≤—å–µ –¥–ª—è —Ä–µ–ª–∞–∫—Å–∞.',
                price=280000,
                image='image/banyakvadro.webp',
                tags='–±–∞–Ω—è,–∫–≤–∞–¥—Ä–æ',
                specs=json.dumps(['–ö–≤–∞–¥—Ä–æ —Ñ–æ—Ä–º–∞', '–ö–µ–¥—Ä —Å–∏–±–∏—Ä—Å–∫–∏–π', '–ì–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ']),
                features=json.dumps(['–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω', '–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –ø–∞—Ä–∏–ª–∫–∞', '–û—Ç–¥–µ–ª—å–Ω–∞—è –º–æ–µ—á–Ω–∞—è', '–ì–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ', '–¢–µ–ø–ª–æ –∏ –∑–¥–æ—Ä–æ–≤—å–µ –¥–ª—è —Ä–µ–ª–∞–∫—Å–∞'])
            ),
            Bathhouse(
                name='–ì–æ—Å—Ç–µ–≤–æ–π –¥–æ–º/–±–∞–Ω—è –∫–≤–∞–¥—Ä–æ/–±—ã—Ç–æ–≤–∫–∞',
                description='–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ. –ë–∞–Ω—è + –≥–æ—Å—Ç–µ–≤–æ–π –¥–æ–º. –≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å. –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏ —Å–µ–º—å–∏.',
                price=225000,
                image='image/gostdom.webp',
                tags='–¥–æ–º,–±–∞–Ω—è,–∫–≤–∞–¥—Ä–æ',
                specs=json.dumps(['–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π', '–ö–µ–¥—Ä —Å–∏–±–∏—Ä—Å–∫–∏–π', '–ì–æ—Å—Ç–µ–≤–æ–π –¥–æ–º + –±–∞–Ω—è']),
                features=json.dumps(['–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ', '–ë–∞–Ω—è + –≥–æ—Å—Ç–µ–≤–æ–π –¥–æ–º', '–≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞', '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏ —Å–µ–º—å–∏'])
            ),
            Bathhouse(
                name='–ë–∞–Ω—è –±–æ—á–∫–∞ –∫–≤–∞–¥—Ä–æ 4 –º–µ—Ç—Ä–∞',
                description='–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –±–∞–Ω—è-–±–æ—á–∫–∞. –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–≤–∞–¥—Ä–æ —Ñ–æ—Ä–º–∞. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç. –ü—Ä–µ–º–∏—É–º –æ—Ç–¥–µ–ª–∫–∞. –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è.',
                price=200000,
                image='image/kvadro4m.webp',
                tags='–±–∞–Ω—è,–∫–≤–∞–¥—Ä–æ',
                specs=json.dumps(['4 –º–µ—Ç—Ä–∞', '–ö–≤–∞–¥—Ä–æ —Ñ–æ—Ä–º–∞', '–ö–µ–¥—Ä —Å–∏–±–∏—Ä—Å–∫–∏–π']),
                features=json.dumps(['–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –±–∞–Ω—è-–±–æ—á–∫–∞', '–£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–≤–∞–¥—Ä–æ —Ñ–æ—Ä–º–∞', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç', '–ü—Ä–µ–º–∏—É–º –æ—Ç–¥–µ–ª–∫–∞', '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∏ –∫–∞—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è'])
            ),
            # –î–æ–±–∞–≤–∏–º –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
            Bathhouse(
                name='–ë–∞–Ω—è-–±–æ—á–∫–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è 3–º',
                description='–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –±–∞–Ω—è-–±–æ—á–∫–∞. –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä. –ò–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö —É—á–∞—Å—Ç–∫–æ–≤. –ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ–≥—Ä–µ–≤.',
                price=150000,
                image='image/classic3m.webp',
                tags='–±–∞–Ω—è,–∫–ª–∞—Å—Å–∏–∫–∞',
                specs=json.dumps(['3 –º–µ—Ç—Ä–∞', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º–∞', '–ö–µ–¥—Ä —Å–∏–±–∏—Ä—Å–∫–∏–π']),
                features=json.dumps(['–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞', '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä', '–ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ–≥—Ä–µ–≤', '–≠–∫–æ–Ω–æ–º–∏—è –º–µ—Å—Ç–∞'])
            ),
            Bathhouse(
                name='–ë–∞–Ω—è-–±–æ—á–∫–∞ —Å —Ç–µ—Ä—Ä–∞—Å–æ–π',
                description='–ë–∞–Ω—è —Å –æ—Ç–∫—Ä—ã—Ç–æ–π —Ç–µ—Ä—Ä–∞—Å–æ–π. –ú–µ—Å—Ç–æ –¥–ª—è –æ—Ç–¥—ã—Ö–∞. –ö—Ä–∞—Å–∏–≤—ã–π –¥–∏–∑–∞–π–Ω. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç.',
                price=320000,
                image='image/terrace.webp',
                tags='–±–∞–Ω—è,—Ç–µ—Ä—Ä–∞—Å–∞',
                specs=json.dumps(['–° —Ç–µ—Ä—Ä–∞—Å–æ–π', '–ö–µ–¥—Ä —Å–∏–±–∏—Ä—Å–∫–∏–π', '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–ª–æ—â–∞–¥—å']),
                features=json.dumps(['–û—Ç–∫—Ä—ã—Ç–∞—è —Ç–µ—Ä—Ä–∞—Å–∞', '–ú–µ—Å—Ç–æ –¥–ª—è –æ—Ç–¥—ã—Ö–∞', '–ö—Ä–∞—Å–∏–≤—ã–π –¥–∏–∑–∞–π–Ω', '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å'])
            )
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        session.add_all(baths)
        session.commit()
        print(f'üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞! –î–æ–±–∞–≤–ª–µ–Ω–æ {len(baths)} –∑–∞–ø–∏—Å–µ–π')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–∏–ª–∏—Å—å
        total_count = session.query(Bathhouse).count()
        print(f'üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {total_count}')
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}')
        session.rollback()
        raise
    finally:
        session.close()

def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    DB_PATH = os.path.join(os.path.dirname(__file__), 'baths.db')
    engine = create_engine(f'sqlite:///{DB_PATH}', echo=False)
    Session = sessionmaker(bind=engine)
    session = Session()
    
    try:
        print('\nüìã –¢–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–ª–∏—Ü—ã bathhouses:')
        print('-' * 80)
        
        for bath in session.query(Bathhouse).all():
            print(f"ID: {bath.id}")
            print(f"Name: {bath.name}")
            print(f"Price: {bath.price:,} ‚ÇΩ")
            print(f"Image: {bath.image}")
            print(f"Tags: {bath.tags}")
            print(f"Description: {bath.description[:50]}...")
            print('-' * 80)
            
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î: {e}')
    finally:
        session.close()

if __name__ == '__main__':
    init_database()
    check_database()